/*Constructor:
has the same name as the class.
it is a member method hence the ().
returns nothing.
allocates memory to objects.
it is called automatically when the object is created.

you can have multiple constructors in the same class provided the signature(parameters) is different.
Static means that it can be accessed without creating an object of the class.
Public means it can only be accessed by objects.

VARIABLE TYPES
There are three kinds of variables in Java:
1. Local variables
2. Instance variables
3. Static/ class variables

Local variables:
They are declared in methods, constructors or blocks.
The are created when the method, constructor or block is entered and the variable will be destroyed once it exits the method, constructor or block.
Access modifiers cannot be used for local variables.
They are only visible within the declared method, constructor or block.
They should be declared and an initial value assigned before their first use.

Instance Variables:
They are declared in a class but outside a method, constructor or block.
They are created when an object is created with the use of the keyword new, and destroyed when the object is destroyed.
They hold values that must be referenced by more than one block, constructor or method or essential parts of an object's state that must be present throughout the class.
Access modifiers can be given for instance variables.
They have default values. Values can be assigned during the declaration or within the constructor.
They can be accessed directly by calling the variable name inside the class. With static methods, they should be called using the fully qualified name. ObjectReference.VariableName.

Static/ Class Variables:
They are declared inside a class but outside a method, constructor or block...with a static keyword.
There is only one copy of each class variable in a class regardless of how many objects are created from it.
They are rarely used other than as public/private, final, and static. They never change from their initial state.
They are stored in the static memory.
They are created when the program starts and destroyed when it stops.
Their visibility is similar to that of instance variables. Most are however declared as public since they must be available to users of the class.
Default values are the same as instance variables.
They can be accessed by calling with the class name: ClassName.VariableName.

ARRAYS
Used to store multiple values in a single variable instead of declaring separate variables for each value.
Examples: String[] cars = {"Volvo", "BMW", "Ford", "Audi"};
           int[] myNum = {10, 20, 30, 40};


